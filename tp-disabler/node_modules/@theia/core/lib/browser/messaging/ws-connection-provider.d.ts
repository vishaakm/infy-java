/********************************************************************************
 * Copyright (C) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { interfaces } from 'inversify';
import { JsonRpcProxy } from '../../common';
import { WebSocketChannel } from '../../common/messaging/web-socket-channel';
import ReconnectingWebSocket from 'reconnecting-websocket';
import { AbstractConnectionProvider } from '../../common/messaging/abstract-connection-provider';
export interface WebSocketOptions {
    /**
     * True by default.
     */
    reconnecting?: boolean;
}
export declare class WebSocketConnectionProvider extends AbstractConnectionProvider<WebSocketOptions> {
    static createProxy<T extends object>(container: interfaces.Container, path: string, arg?: object): JsonRpcProxy<T>;
    protected readonly socket: ReconnectingWebSocket;
    constructor();
    openChannel(path: string, handler: (channel: WebSocketChannel) => void, options?: WebSocketOptions): void;
    protected createChannel(id: number): WebSocketChannel;
    /**
     * Creates a websocket URL to the current location
     */
    protected createWebSocketUrl(path: string): string;
    /**
     * Creates a web socket for the given url
     */
    protected createWebSocket(url: string): ReconnectingWebSocket;
}
//# sourceMappingURL=ws-connection-provider.d.ts.map